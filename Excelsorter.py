# -*- coding: utf-8 -*-
"""
Created on Sun Oct 10 15:34:18 2021

@author: vnarayana
"""
from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

def find_nearest(a,b,c,d,e,f):
    lknm = pow(pow(a-b,2)+pow(c-d,2)+pow(e-f,2),0.5)
    idx = (pow(pow(a-b,2)+pow(c-d,2)+pow(e-f,2),0.5))
    return idx


Vxx = []
Vyy = []
Vzz = []

df = pd.read_excel(r'\\juno\homes\user\vnarayana\Desktop\TopAM\Pythonprogramming_Nanoparticle\Excel\data.xlsx')

X = [0.23315152316112187, -0.4024096653973297, 0.775075956669919, -0.2545416284931357, 0.0075669759656643715, 0.7997843016816824, -0.8412714403864021, 0.689148350664175, 0.16042953998357898, -0.569718795116705, 1.0765168686984998, -0.7220242996299909, 0.2789136014239634, 0.6590045280946842, -0.8070174670469623, 0.7730533140586456, -0.14588118723335142, -0.2149554546776589, 0.5516368620778593, -0.25594302286934556, 2.2531515231611214, 1.5975903346026703, 2.6550759566699185, 1.7254583715068643, 2.0075669759656645, 2.759784301681682, 1.168728559613598, 2.779148350664175, 2.0904295399835786, 1.390281204883295, 3.0765168686985, 1.257975700370009, 2.188913601423963, 2.599004528094684, 1.2929825329530378, 2.8030533140586456, 1.8541188127666488, 1.735044545322341, 2.581636862077859, 1.8740569771306546, 0.17315152316112184, -0.3724096653973297, 0.755075956669919, -0.2245416284931357, -0.052433024034335626, 0.7897843016816823, -0.8812714403864021, 0.669148350664175, 0.09042953998357897, -0.6397187951167049, 1.1265168686984999, -0.772024299629991, 0.26891360142396337, 0.6090045280946842, -0.8270174670469623, 0.8230533140586456, -0.16588118723335138, -0.2349554546776589, 0.5816368620778595, -0.25594302286934556, 2.2431515231611217, 1.6275903346026703, 2.7450759566699188, 1.6454583715068642, 1.9675669759656644, 2.8397843016816817, 1.198728559613598, 2.769148350664175, 2.1304295399835786, 1.390281204883295, 3.0665168686985, 1.337975700370009, 2.288913601423963, 2.529004528094684, 1.2229825329530377, 2.7530533140586453, 1.8241188127666488, 1.8450445453223412, 2.551636862077859, 1.7640569771306545]
Y = [-0.39102703105780084, 0.1530860528628493, 0.1848743607420656, -0.6894897253890815, 0.719216401632109, -0.6385929994358732, -0.261160784499903, 0.6673165650824026, -1.028474903017805, 0.6623489348388081, -0.13673927179207734, -0.6676394423778506, 0.8767260523843514, -0.9098296607703595, 0.09396427700779744, 0.3401660139837423, -0.7590566332109854, 0.6060516537693427, -0.3533680695132072, -0.12958778647481858, -0.4210270310578008, 0.20308605286284928, 0.06487436074206558, -0.6494897253890815, 0.699216401632109, -0.5885929994358732, -0.18116078449990297, 0.6173165650824026, -1.0684749030178051, 0.6323489348388082, -0.18673927179207736, -0.7476394423778505, 0.8367260523843514, -0.9098296607703595, 0.12396427700779743, 0.25016601398374233, -0.7790566332109854, 0.5660516537693426, -0.28336806951320725, -0.11958778647481857, -0.32102703105780084, 0.14308605286284928, 0.08487436074206559, -0.7494897253890815, 0.7292164016321091, -0.5985929994358732, -0.271160784499903, 0.5973165650824026, -1.0684749030178051, 0.6923489348388081, -0.17673927179207732, -0.6776394423778506, 0.8567260523843514, -0.8698296607703595, 0.11396427700779743, 0.3001660139837423, -0.8190566332109854, 0.5160516537693427, -0.25336806951320723, -0.1695877864748186, -0.3610270310578008, 0.18308605286284926, 0.08487436074206559, -0.6794897253890815, 0.749216401632109, -0.6285929994358732, -0.16116078449990295, 0.5873165650824026, -1.038474903017805, 0.5723489348388081, -0.13673927179207734, -0.6876394423778505, 0.8667260523843514, -0.9298296607703596, 0.11396427700779745, 0.3401660139837423, -0.8090566332109854, 0.5060516537693427, -0.25336806951320723, -0.10958778647481858]
Z = [1.05, 0.91, 0.79, 0.77, 0.6300000000000001, 0.5699999999999998, 0.36000000000000004, 0.38, 0.21999999999999997, 0.17000000000000012, 0.010000000000000012, 1.3877787807814457e-16, -0.20000000000000012, -0.2700000000000002, -0.40000000000000013, -0.5299999999999999, -0.58, -0.5900000000000001, -0.7300000000000002, -0.8499999999999999, 1.08, 0.9299999999999999, 0.87, 0.66, 0.6700000000000002, 0.4899999999999999, 0.52, 0.3, 0.25999999999999995, 0.22000000000000014, 0.06000000000000001, -0.08999999999999984, -0.0800000000000001, -0.2600000000000001, -0.4300000000000001, -0.48999999999999994, -0.56, -0.6100000000000001, -0.7500000000000002, -0.83, 3.02, 2.94, 2.7899999999999996, 2.73, 2.63, 2.5399999999999996, 2.44, 2.34, 2.28, 2.18, 2.06, 1.9800000000000002, 1.9000000000000001, 1.69, 1.6099999999999999, 1.5000000000000002, 1.4200000000000002, 1.34, 1.28, 1.1400000000000001, 3.13, 2.93, 2.84, 2.7199999999999998, 2.71, 2.5999999999999996, 2.4699999999999998, 2.3699999999999997, 2.15, 2.1, 2.07, 1.9200000000000002, 1.82, 1.76, 1.6199999999999999, 1.5300000000000002, 1.4700000000000002, 1.32, 1.22, 1.1500000000000001]

Xexcel = df[['Points:0']].to_numpy()
Yexcel = df[['Points:1']].to_numpy()
Zexcel = df[['Points:2']].to_numpy()
Vx = df[['Velocity:0']].to_numpy()
Vy = df[['Velocity:1']].to_numpy()
Vz = df[['Velocity:2']].to_numpy()

for i in range(0,len(X)):
    a = X[i]
    b = Y[i]
    c = Z[i]
    distances = []
    print(i)
    for j in range(0,len(Xexcel)):
        d = Xexcel[j]
        e = Yexcel[j]
        f = Zexcel[j]
        distances.append(find_nearest(a,d,b,e,c,f))
    idx = distances.index(min(distances))
    Vxx.append(Vx[idx])
    Vyy.append(Vy[idx])
    Vzz.append(Vz[idx])
